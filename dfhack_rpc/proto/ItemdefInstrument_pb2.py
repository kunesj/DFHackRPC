# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ItemdefInstrument.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='ItemdefInstrument.proto',
  package='ItemdefInstrument',
  syntax='proto2',
  serialized_pb=_b('\n\x17ItemdefInstrument.proto\x12\x11ItemdefInstrument\"\xcc\x01\n\x0fInstrumentFlags\x12\x18\n\x10indefinite_pitch\x18\x01 \x01(\x08\x12\x1a\n\x12placed_as_building\x18\x02 \x01(\x08\x12\x11\n\tmetal_mat\x18\x03 \x01(\x08\x12\x11\n\tstone_mat\x18\x04 \x01(\x08\x12\x10\n\x08wood_mat\x18\x05 \x01(\x08\x12\x11\n\tglass_mat\x18\x06 \x01(\x08\x12\x13\n\x0b\x63\x65ramic_mat\x18\x07 \x01(\x08\x12\x11\n\tshell_mat\x18\x08 \x01(\x08\x12\x10\n\x08\x62one_mat\x18\t \x01(\x08\"N\n\x0fInstrumentPiece\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\n\n\x02id\x18\x02 \x01(\t\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x13\n\x0bname_plural\x18\x04 \x01(\t\"F\n\x12InstrumentRegister\x12\x17\n\x0fpitch_range_min\x18\x01 \x01(\x05\x12\x17\n\x0fpitch_range_max\x18\x02 \x01(\x05\"\x91\x05\n\rInstrumentDef\x12\x31\n\x05\x66lags\x18\x01 \x01(\x0b\x32\".ItemdefInstrument.InstrumentFlags\x12\x0c\n\x04size\x18\x02 \x01(\x05\x12\r\n\x05value\x18\x03 \x01(\x05\x12\x15\n\rmaterial_size\x18\x04 \x01(\x05\x12\x32\n\x06pieces\x18\x05 \x03(\x0b\x32\".ItemdefInstrument.InstrumentPiece\x12\x17\n\x0fpitch_range_min\x18\x06 \x01(\x05\x12\x17\n\x0fpitch_range_max\x18\x07 \x01(\x05\x12\x15\n\rvolume_mb_min\x18\x08 \x01(\x05\x12\x15\n\rvolume_mb_max\x18\t \x01(\x05\x12@\n\x10sound_production\x18\n \x03(\x0e\x32&.ItemdefInstrument.SoundProductionType\x12\x1e\n\x16sound_production_parm1\x18\x0b \x03(\t\x12\x1e\n\x16sound_production_parm2\x18\x0c \x03(\t\x12\x38\n\x0cpitch_choice\x18\r \x03(\x0e\x32\".ItemdefInstrument.PitchChoiceType\x12\x1a\n\x12pitch_choice_parm1\x18\x0e \x03(\t\x12\x1a\n\x12pitch_choice_parm2\x18\x0f \x03(\t\x12-\n\x06tuning\x18\x10 \x03(\x0e\x32\x1d.ItemdefInstrument.TuningType\x12\x13\n\x0btuning_parm\x18\x11 \x03(\t\x12\x38\n\tregisters\x18\x12 \x03(\x0b\x32%.ItemdefInstrument.InstrumentRegister\x12\x13\n\x0b\x64\x65scription\x18\x13 \x01(\t*\xf9\x01\n\x0fPitchChoiceType\x12\x15\n\x11MEMBRANE_POSITION\x10\x00\x12\x12\n\x0eSUBPART_CHOICE\x10\x01\x12\x0c\n\x08KEYBOARD\x10\x02\x12\x11\n\rSTOPPING_FRET\x10\x03\x12\x19\n\x15STOPPING_AGAINST_BODY\x10\x04\x12\x11\n\rSTOPPING_HOLE\x10\x05\x12\x15\n\x11STOPPING_HOLE_KEY\x10\x06\x12\t\n\x05SLIDE\x10\x07\x12\x13\n\x0fHARMONIC_SERIES\x10\x08\x12\x14\n\x10VALVE_ROUTES_AIR\x10\t\x12\x0e\n\nBP_IN_BELL\x10\n\x12\x0f\n\x0b\x46OOT_PEDALS\x10\x0b*\xbe\x03\n\x13SoundProductionType\x12\x11\n\rPLUCKED_BY_BP\x10\x00\x12\x0b\n\x07PLUCKED\x10\x01\x12\t\n\x05\x42OWED\x10\x02\x12\x10\n\x0cSTRUCK_BY_BP\x10\x03\x12\n\n\x06STRUCK\x10\x04\x12\x1e\n\x1aVIBRATE_BP_AGAINST_OPENING\x10\x05\x12\x17\n\x13\x42LOW_AGAINST_FIPPLE\x10\x06\x12\x1a\n\x16\x42LOW_OVER_OPENING_SIDE\x10\x07\x12\x19\n\x15\x42LOW_OVER_OPENING_END\x10\x08\x12\x19\n\x15\x42LOW_OVER_SINGLE_REED\x10\t\x12\x19\n\x15\x42LOW_OVER_DOUBLE_REED\x10\n\x12\x17\n\x13\x42LOW_OVER_FREE_REED\x10\x0b\x12\x13\n\x0fSTRUCK_TOGETHER\x10\x0c\x12\n\n\x06SHAKEN\x10\r\x12\x0b\n\x07SCRAPED\x10\x0e\x12\x0c\n\x08\x46RICTION\x10\x0f\x12\r\n\tRESONATOR\x10\x10\x12\x11\n\rBAG_OVER_REED\x10\x11\x12\x11\n\rAIR_OVER_REED\x10\x12\x12\x16\n\x12\x41IR_OVER_FREE_REED\x10\x13\x12\x16\n\x12\x41IR_AGAINST_FIPPLE\x10\x14*V\n\nTuningType\x12\x08\n\x04PEGS\x10\x00\x12\x16\n\x12\x41\x44JUSTABLE_BRIDGES\x10\x01\x12\n\n\x06\x43ROOKS\x10\x02\x12\x0e\n\nTIGHTENING\x10\x03\x12\n\n\x06LEVERS\x10\x04\x42\x02H\x03')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_PITCHCHOICETYPE = _descriptor.EnumDescriptor(
  name='PitchChoiceType',
  full_name='ItemdefInstrument.PitchChoiceType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='MEMBRANE_POSITION', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUBPART_CHOICE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='KEYBOARD', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STOPPING_FRET', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STOPPING_AGAINST_BODY', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STOPPING_HOLE', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STOPPING_HOLE_KEY', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SLIDE', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HARMONIC_SERIES', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VALVE_ROUTES_AIR', index=9, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BP_IN_BELL', index=10, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FOOT_PEDALS', index=11, number=11,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1066,
  serialized_end=1315,
)
_sym_db.RegisterEnumDescriptor(_PITCHCHOICETYPE)

PitchChoiceType = enum_type_wrapper.EnumTypeWrapper(_PITCHCHOICETYPE)
_SOUNDPRODUCTIONTYPE = _descriptor.EnumDescriptor(
  name='SoundProductionType',
  full_name='ItemdefInstrument.SoundProductionType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='PLUCKED_BY_BP', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PLUCKED', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BOWED', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STRUCK_BY_BP', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STRUCK', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VIBRATE_BP_AGAINST_OPENING', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BLOW_AGAINST_FIPPLE', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BLOW_OVER_OPENING_SIDE', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BLOW_OVER_OPENING_END', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BLOW_OVER_SINGLE_REED', index=9, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BLOW_OVER_DOUBLE_REED', index=10, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BLOW_OVER_FREE_REED', index=11, number=11,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STRUCK_TOGETHER', index=12, number=12,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SHAKEN', index=13, number=13,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SCRAPED', index=14, number=14,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FRICTION', index=15, number=15,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RESONATOR', index=16, number=16,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BAG_OVER_REED', index=17, number=17,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AIR_OVER_REED', index=18, number=18,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AIR_OVER_FREE_REED', index=19, number=19,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AIR_AGAINST_FIPPLE', index=20, number=20,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1318,
  serialized_end=1764,
)
_sym_db.RegisterEnumDescriptor(_SOUNDPRODUCTIONTYPE)

SoundProductionType = enum_type_wrapper.EnumTypeWrapper(_SOUNDPRODUCTIONTYPE)
_TUNINGTYPE = _descriptor.EnumDescriptor(
  name='TuningType',
  full_name='ItemdefInstrument.TuningType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='PEGS', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADJUSTABLE_BRIDGES', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CROOKS', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TIGHTENING', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LEVERS', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1766,
  serialized_end=1852,
)
_sym_db.RegisterEnumDescriptor(_TUNINGTYPE)

TuningType = enum_type_wrapper.EnumTypeWrapper(_TUNINGTYPE)
MEMBRANE_POSITION = 0
SUBPART_CHOICE = 1
KEYBOARD = 2
STOPPING_FRET = 3
STOPPING_AGAINST_BODY = 4
STOPPING_HOLE = 5
STOPPING_HOLE_KEY = 6
SLIDE = 7
HARMONIC_SERIES = 8
VALVE_ROUTES_AIR = 9
BP_IN_BELL = 10
FOOT_PEDALS = 11
PLUCKED_BY_BP = 0
PLUCKED = 1
BOWED = 2
STRUCK_BY_BP = 3
STRUCK = 4
VIBRATE_BP_AGAINST_OPENING = 5
BLOW_AGAINST_FIPPLE = 6
BLOW_OVER_OPENING_SIDE = 7
BLOW_OVER_OPENING_END = 8
BLOW_OVER_SINGLE_REED = 9
BLOW_OVER_DOUBLE_REED = 10
BLOW_OVER_FREE_REED = 11
STRUCK_TOGETHER = 12
SHAKEN = 13
SCRAPED = 14
FRICTION = 15
RESONATOR = 16
BAG_OVER_REED = 17
AIR_OVER_REED = 18
AIR_OVER_FREE_REED = 19
AIR_AGAINST_FIPPLE = 20
PEGS = 0
ADJUSTABLE_BRIDGES = 1
CROOKS = 2
TIGHTENING = 3
LEVERS = 4



_INSTRUMENTFLAGS = _descriptor.Descriptor(
  name='InstrumentFlags',
  full_name='ItemdefInstrument.InstrumentFlags',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='indefinite_pitch', full_name='ItemdefInstrument.InstrumentFlags.indefinite_pitch', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='placed_as_building', full_name='ItemdefInstrument.InstrumentFlags.placed_as_building', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='metal_mat', full_name='ItemdefInstrument.InstrumentFlags.metal_mat', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stone_mat', full_name='ItemdefInstrument.InstrumentFlags.stone_mat', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='wood_mat', full_name='ItemdefInstrument.InstrumentFlags.wood_mat', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='glass_mat', full_name='ItemdefInstrument.InstrumentFlags.glass_mat', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ceramic_mat', full_name='ItemdefInstrument.InstrumentFlags.ceramic_mat', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='shell_mat', full_name='ItemdefInstrument.InstrumentFlags.shell_mat', index=7,
      number=8, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bone_mat', full_name='ItemdefInstrument.InstrumentFlags.bone_mat', index=8,
      number=9, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=47,
  serialized_end=251,
)


_INSTRUMENTPIECE = _descriptor.Descriptor(
  name='InstrumentPiece',
  full_name='ItemdefInstrument.InstrumentPiece',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='ItemdefInstrument.InstrumentPiece.type', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='id', full_name='ItemdefInstrument.InstrumentPiece.id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='ItemdefInstrument.InstrumentPiece.name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name_plural', full_name='ItemdefInstrument.InstrumentPiece.name_plural', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=253,
  serialized_end=331,
)


_INSTRUMENTREGISTER = _descriptor.Descriptor(
  name='InstrumentRegister',
  full_name='ItemdefInstrument.InstrumentRegister',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pitch_range_min', full_name='ItemdefInstrument.InstrumentRegister.pitch_range_min', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pitch_range_max', full_name='ItemdefInstrument.InstrumentRegister.pitch_range_max', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=333,
  serialized_end=403,
)


_INSTRUMENTDEF = _descriptor.Descriptor(
  name='InstrumentDef',
  full_name='ItemdefInstrument.InstrumentDef',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='flags', full_name='ItemdefInstrument.InstrumentDef.flags', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='size', full_name='ItemdefInstrument.InstrumentDef.size', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='ItemdefInstrument.InstrumentDef.value', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='material_size', full_name='ItemdefInstrument.InstrumentDef.material_size', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pieces', full_name='ItemdefInstrument.InstrumentDef.pieces', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pitch_range_min', full_name='ItemdefInstrument.InstrumentDef.pitch_range_min', index=5,
      number=6, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pitch_range_max', full_name='ItemdefInstrument.InstrumentDef.pitch_range_max', index=6,
      number=7, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='volume_mb_min', full_name='ItemdefInstrument.InstrumentDef.volume_mb_min', index=7,
      number=8, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='volume_mb_max', full_name='ItemdefInstrument.InstrumentDef.volume_mb_max', index=8,
      number=9, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sound_production', full_name='ItemdefInstrument.InstrumentDef.sound_production', index=9,
      number=10, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sound_production_parm1', full_name='ItemdefInstrument.InstrumentDef.sound_production_parm1', index=10,
      number=11, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sound_production_parm2', full_name='ItemdefInstrument.InstrumentDef.sound_production_parm2', index=11,
      number=12, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pitch_choice', full_name='ItemdefInstrument.InstrumentDef.pitch_choice', index=12,
      number=13, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pitch_choice_parm1', full_name='ItemdefInstrument.InstrumentDef.pitch_choice_parm1', index=13,
      number=14, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pitch_choice_parm2', full_name='ItemdefInstrument.InstrumentDef.pitch_choice_parm2', index=14,
      number=15, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tuning', full_name='ItemdefInstrument.InstrumentDef.tuning', index=15,
      number=16, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tuning_parm', full_name='ItemdefInstrument.InstrumentDef.tuning_parm', index=16,
      number=17, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='registers', full_name='ItemdefInstrument.InstrumentDef.registers', index=17,
      number=18, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='ItemdefInstrument.InstrumentDef.description', index=18,
      number=19, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=406,
  serialized_end=1063,
)

_INSTRUMENTDEF.fields_by_name['flags'].message_type = _INSTRUMENTFLAGS
_INSTRUMENTDEF.fields_by_name['pieces'].message_type = _INSTRUMENTPIECE
_INSTRUMENTDEF.fields_by_name['sound_production'].enum_type = _SOUNDPRODUCTIONTYPE
_INSTRUMENTDEF.fields_by_name['pitch_choice'].enum_type = _PITCHCHOICETYPE
_INSTRUMENTDEF.fields_by_name['tuning'].enum_type = _TUNINGTYPE
_INSTRUMENTDEF.fields_by_name['registers'].message_type = _INSTRUMENTREGISTER
DESCRIPTOR.message_types_by_name['InstrumentFlags'] = _INSTRUMENTFLAGS
DESCRIPTOR.message_types_by_name['InstrumentPiece'] = _INSTRUMENTPIECE
DESCRIPTOR.message_types_by_name['InstrumentRegister'] = _INSTRUMENTREGISTER
DESCRIPTOR.message_types_by_name['InstrumentDef'] = _INSTRUMENTDEF
DESCRIPTOR.enum_types_by_name['PitchChoiceType'] = _PITCHCHOICETYPE
DESCRIPTOR.enum_types_by_name['SoundProductionType'] = _SOUNDPRODUCTIONTYPE
DESCRIPTOR.enum_types_by_name['TuningType'] = _TUNINGTYPE

InstrumentFlags = _reflection.GeneratedProtocolMessageType('InstrumentFlags', (_message.Message,), dict(
  DESCRIPTOR = _INSTRUMENTFLAGS,
  __module__ = 'ItemdefInstrument_pb2'
  # @@protoc_insertion_point(class_scope:ItemdefInstrument.InstrumentFlags)
  ))
_sym_db.RegisterMessage(InstrumentFlags)

InstrumentPiece = _reflection.GeneratedProtocolMessageType('InstrumentPiece', (_message.Message,), dict(
  DESCRIPTOR = _INSTRUMENTPIECE,
  __module__ = 'ItemdefInstrument_pb2'
  # @@protoc_insertion_point(class_scope:ItemdefInstrument.InstrumentPiece)
  ))
_sym_db.RegisterMessage(InstrumentPiece)

InstrumentRegister = _reflection.GeneratedProtocolMessageType('InstrumentRegister', (_message.Message,), dict(
  DESCRIPTOR = _INSTRUMENTREGISTER,
  __module__ = 'ItemdefInstrument_pb2'
  # @@protoc_insertion_point(class_scope:ItemdefInstrument.InstrumentRegister)
  ))
_sym_db.RegisterMessage(InstrumentRegister)

InstrumentDef = _reflection.GeneratedProtocolMessageType('InstrumentDef', (_message.Message,), dict(
  DESCRIPTOR = _INSTRUMENTDEF,
  __module__ = 'ItemdefInstrument_pb2'
  # @@protoc_insertion_point(class_scope:ItemdefInstrument.InstrumentDef)
  ))
_sym_db.RegisterMessage(InstrumentDef)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('H\003'))
# @@protoc_insertion_point(module_scope)
